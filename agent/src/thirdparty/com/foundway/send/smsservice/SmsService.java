package com.foundway.send.smsservice;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * <p>
 * An example of how this class may be used:
 *
 * <pre>
 * SmsService service = new SmsService();
 * SmsServiceSoap portType = service.getSmsServiceSoap();
 * portType.send(...);
 * </pre>
 *
 * </p>
 *
 */
@WebServiceClient(name = "SmsService", targetNamespace = "http://www.foundway.com/send/smsservice", wsdlLocation = "file:SmsService.wsdl")
public class SmsService extends Service {
    private static URL SMSSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger
            .getLogger(com.foundway.send.smsservice.SmsService.class.getName());

//	static {
//		URL url = null;
//		try {
//			URL baseUrl = com.foundway.send.smsservice.SmsService.class.getResource("");
//			strUrl = baseUrl + "SmsService.wsdl";
//			url = new URL(strUrl);//file:/D:/App_Web_Server/apache-tomcat-6_DS/webapps/themis/WEB-INF/classes/com/foundway/send/smsservice/SmsService.wsdl
//			System.out.println("DEBUG: Url_WSDL : " + strUrl);
//		} catch (MalformedURLException e) {
//			logger.warning("Failed to create URL for the wsdl Location: '" +strUrl+ "', retrying as a local file");
//			logger.warning(e.getMessage());
//		}
//		SMSSERVICE_WSDL_LOCATION = url;
//	}

    //测试: 为了定位和读取SmsService.wsdl文件，测试j2se、tomcat、weblogic三种环境下的路径寻址区别。
    public void testFilePath() {
        //当前类SmsService.class文件的URI目录。不包括自己！
        URL baseUrl = SmsService.class.getResource("");
        //file:/F:/work/cvs/themis_V1.0_DS/WebRoot/WEB-INF/classes/com/foundway/send/smsservice/
        //file:/D:/App_Web_Server/apache-tomcat-6_DS/webapps/themis/WEB-INF/classes/com/foundway/send/smsservice/
        //file:/D:/App_Web_Server/bea102/user_projects/domains/testdomain/autodeploy/themis/WEB-INF/classes/com/foundway/send/smsservice/
        System.out.println("DEBUG: baseUrl = " + baseUrl);

        //当前的classpath的绝对URI路径
        URL baseUrl2 = SmsService.class.getResource("/");
        //file:/F:/work/cvs/themis_V1.0_DS/WebRoot/WEB-INF/classes/
        //file:/D:/App_Web_Server/apache-tomcat-6_DS/webapps/themis/WEB-INF/classes/
        //file:/D:/App_Web_Server/bea102/wlserver_10.0/common/lib/
        System.out.println("DEBUG: baseUrl2 = " + baseUrl2);

        URL baseUrl4 = Thread.currentThread().getContextClassLoader().getResource("");//推荐
        //file:/F:/work/cvs/themis_V1.0_DS/WebRoot/WEB-INF/classes/
        //file:/D:/App_Web_Server/apache-tomcat-6_DS/webapps/themis/WEB-INF/classes/
        //file:/D:/App_Web_Server/bea102/wlserver_10.0/common/lib/
        System.out.println("DEBUG: baseUrl4 = " + baseUrl4);

        URL baseUrl5 = SmsService.class.getClassLoader().getResource("");
        //file:/F:/work/cvs/themis_V1.0_DS/WebRoot/WEB-INF/classes/
        //file:/D:/App_Web_Server/apache-tomcat-6_DS/webapps/themis/WEB-INF/classes/
        //file:/D:/App_Web_Server/bea102/wlserver_10.0/common/lib/
        System.out.println("DEBUG: baseUrl5 = " + baseUrl5);

        URL baseUrl6 = ClassLoader.getSystemResource("");
        //file:/F:/work/cvs/themis_V1.0_DS/WebRoot/WEB-INF/classes/
        //null
        //file:/D:/App_Web_Server/bea102/wlserver_10.0/common/lib/
        System.out.println("DEBUG: baseUrl6 = " + baseUrl6);

        //当前用户目录 	对于一般项目，这是项目的根路径;对于JavaEE服务器，这可能是服务器的某个路径。	这个并没有统一的规范
        String strUrl3 = System.getProperty("user.dir");
        //F:\work\cvs\themis_V1.0_DS
        //D:\App_Web_Server\apache-tomcat-6_DS\bin
        //D:\App_Web_Server\bea102\ user_projects\domains\testdomain
        System.out.println("DEBUG: strUrl3 = " + strUrl3);

        //在Web应用程序中，我们一般通过ServletContext.getRealPath("/")方法得到Web应用程序的根目录的绝对路径。
        //Web应用程序，可以作为Web应用程序进行发布和运行。
        //但是，我们也常常会以JavaSE的方式来运行Web应用程序的某个类的main方法。
        //或者，使用JUnit测试。这都需要使用JavaSE的方式来运行。
        //这样，我们就无法使用ServletContext.getRealPath("/")方法得到Web应用程序的根目录的绝对路径。
    }

    public SmsService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SmsService() {
        super(SMSSERVICE_WSDL_LOCATION, new QName(
                "http://www.foundway.com/send/smsservice", "SmsService"));
    }

    /**
     *
     * @return returns SmsServiceSoap
     */
    @WebEndpoint(name = "SmsServiceSoap")
    public SmsServiceSoap getSmsServiceSoap() {
        return super.getPort(new QName(
                "http://www.foundway.com/send/smsservice", "SmsServiceSoap"),
                SmsServiceSoap.class);
    }

    /**
     *
     * @return returns SmsServiceSoap
     */
    @WebEndpoint(name = "SmsServiceSoap12")
    public SmsServiceSoap getSmsServiceSoap12() {
        return super.getPort(new QName(
                "http://www.foundway.com/send/smsservice", "SmsServiceSoap12"),
                SmsServiceSoap.class);
    }

    public static void setSmsServiceUrl(String url) {
        try {
            //url =  "http://219.148.160.125:9099/SmsService/SmsService.asmx?wsdl";
            SMSSERVICE_WSDL_LOCATION = new URL(url);
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: '" +url+ "', retrying as a local file");
            logger.warning(e.getMessage());
        }

    }
}
